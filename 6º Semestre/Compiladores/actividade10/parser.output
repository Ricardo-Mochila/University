Terminals unused in grammar

    STRUCT
    BREAK


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | decls

    3 decls: decl
    4      | decl decls

    5 decl: ids COLON type SEMI
    6     | ids COLON type ASSIGN exp SEMI
    7     | ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | DEFINE ID type SEMI

   10 argdef: ID COLON type

   11 argdefs: argdef
   12        | argdef COMMA argdefs

   13 args: exp
   14     | exp COMMA args

   15 ids: ID
   16    | ID COMMA ids

   17 stms: stm
   18     | stm stms

   19 stm: decl
   20    | exp SEMI
   21    | RETURN exp SEMI
   22    | IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | NEXT

   26 type: _T_INT
   27     | _T_FLOAT
   28     | _T_STRING
   29     | _T_BOOL
   30     | _T_VOID
   31     | ID
   32     | type LSBRACE INTLIT RSBRACE

   33 lit: INTLIT
   34    | FLOATLIT
   35    | STRLIT
   36    | BOOLLIT

   37 exp: lit
   38    | ID
   39    | exp LSBRACE INTLIT RSBRACE
   40    | exp ADD exp
   41    | exp SUB exp
   42    | exp MUL exp
   43    | exp DIV exp
   44    | exp POW exp
   45    | exp MOD exp
   46    | exp GT exp
   47    | exp LT exp
   48    | exp GEQ exp
   49    | exp LEQ exp
   50    | exp NEQ exp
   51    | exp EQ exp
   52    | exp AND exp
   53    | exp OR exp
   54    | NOT exp
   55    | SUB exp
   56    | LPAR exp RPAR
   57    | ID LPAR RPAR
   58    | ID LPAR args RPAR
   59    | exp ASSIGN exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTLIT <ival> (258) 32 33 39
    BOOLLIT <ival> (259) 36
    FLOATLIT <dval> (260) 34
    STRLIT <str> (261) 35
    ID <str> (262) 7 8 9 10 15 16 31 38 57 58
    _T_INT <str> (263) 26
    _T_FLOAT <str> (264) 27
    _T_STRING <str> (265) 28
    _T_BOOL <str> (266) 29
    _T_VOID <str> (267) 30
    COLON (268) 5 6 7 8 10
    DEFINE (269) 9
    RETURN (270) 21
    STRUCT (271)
    WHILE (272) 24
    DO (273) 24
    NEXT (274) 25
    BREAK (275)
    IF (276) 22 23
    THEN (277) 22 23
    ELSE (278) 23 24
    SEMI (279) 5 6 7 8 9 20 21 22 23 24
    ASSIGN (280) 6 59
    COMMA (281) 12 14 16
    OR (282) 53
    AND (283) 52
    NOT (284) 54
    SUB (285) 41 55
    ADD (286) 40
    MUL (287) 42
    DIV (288) 43
    MOD (289) 45
    POW (290) 44
    EQ (291) 51
    NEQ (292) 50
    GT (293) 46
    GEQ (294) 48
    LT (295) 47
    LEQ (296) 49
    NEG (297)
    LCBRACE (298) 7 8 22 23 24
    RCBRACE (299) 7 8 22 23 24
    LSBRACE (300) 32 39
    RSBRACE (301) 32 39
    LPAR (302) 7 8 56 57 58
    RPAR (303) 7 8 56 57 58


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program <decls> (50)
        on left: 1 2
        on right: 0
    decls <decls> (51)
        on left: 3 4
        on right: 2 4
    decl <decl> (52)
        on left: 5 6 7 8 9
        on right: 3 4 19
    argdef <argdef> (53)
        on left: 10
        on right: 11 12
    argdefs <argdefs> (54)
        on left: 11 12
        on right: 8 12
    args <args> (55)
        on left: 13 14
        on right: 14 58
    ids <ids> (56)
        on left: 15 16
        on right: 5 6 16
    stms <stms> (57)
        on left: 17 18
        on right: 7 8 18 22 23 24
    stm <stm> (58)
        on left: 19 20 21 22 23 24 25
        on right: 17 18
    type <type> (59)
        on left: 26 27 28 29 30 31 32
        on right: 5 6 7 8 9 10 32
    lit <lit> (60)
        on left: 33 34 35 36
        on right: 37
    exp <exp> (61)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 6 13 14 20 21 22 23 24 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 59


State 0

    0 $accept: . program $end
    1 program: . %empty  [$end]
    2        | . decls
    3 decls: . decl
    4      | . decl decls
    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program  go to state 3
    decls    go to state 4
    decl     go to state 5
    ids      go to state 6


State 1

    7 decl: ID . LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID . LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
   15 ids: ID .  [COLON]
   16    | ID . COMMA ids

    COMMA  shift, and go to state 7
    LPAR   shift, and go to state 8

    $default  reduce using rule 15 (ids)


State 2

    9 decl: DEFINE . ID type SEMI

    ID  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    2 program: decls .

    $default  reduce using rule 2 (program)


State 5

    3 decls: . decl
    3      | decl .  [$end]
    4      | . decl decls
    4      | decl . decls
    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    $default  reduce using rule 3 (decls)

    decls  go to state 11
    decl   go to state 5
    ids    go to state 6


State 6

    5 decl: ids . COLON type SEMI
    6     | ids . COLON type ASSIGN exp SEMI

    COLON  shift, and go to state 12


State 7

   15 ids: . ID
   16    | . ID COMMA ids
   16    | ID COMMA . ids

    ID  shift, and go to state 13

    ids  go to state 14


State 8

    7 decl: ID LPAR . RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID LPAR . argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
   10 argdef: . ID COLON type
   11 argdefs: . argdef
   12        | . argdef COMMA argdefs

    ID    shift, and go to state 15
    RPAR  shift, and go to state 16

    argdef   go to state 17
    argdefs  go to state 18


State 9

    9 decl: DEFINE ID . type SEMI
   26 type: . _T_INT
   27     | . _T_FLOAT
   28     | . _T_STRING
   29     | . _T_BOOL
   30     | . _T_VOID
   31     | . ID
   32     | . type LSBRACE INTLIT RSBRACE

    ID         shift, and go to state 19
    _T_INT     shift, and go to state 20
    _T_FLOAT   shift, and go to state 21
    _T_STRING  shift, and go to state 22
    _T_BOOL    shift, and go to state 23
    _T_VOID    shift, and go to state 24

    type  go to state 25


State 10

    0 $accept: program $end .

    $default  accept


State 11

    4 decls: decl decls .

    $default  reduce using rule 4 (decls)


State 12

    5 decl: ids COLON . type SEMI
    6     | ids COLON . type ASSIGN exp SEMI
   26 type: . _T_INT
   27     | . _T_FLOAT
   28     | . _T_STRING
   29     | . _T_BOOL
   30     | . _T_VOID
   31     | . ID
   32     | . type LSBRACE INTLIT RSBRACE

    ID         shift, and go to state 19
    _T_INT     shift, and go to state 20
    _T_FLOAT   shift, and go to state 21
    _T_STRING  shift, and go to state 22
    _T_BOOL    shift, and go to state 23
    _T_VOID    shift, and go to state 24

    type  go to state 26


State 13

   15 ids: ID .  [COLON]
   16    | ID . COMMA ids

    COMMA  shift, and go to state 7

    $default  reduce using rule 15 (ids)


State 14

   16 ids: ID COMMA ids .

    $default  reduce using rule 16 (ids)


State 15

   10 argdef: ID . COLON type

    COLON  shift, and go to state 27


State 16

    7 decl: ID LPAR RPAR . COLON type LCBRACE stms RCBRACE SEMI

    COLON  shift, and go to state 28


State 17

   11 argdefs: argdef .  [RPAR]
   12        | argdef . COMMA argdefs

    COMMA  shift, and go to state 29

    $default  reduce using rule 11 (argdefs)


State 18

    8 decl: ID LPAR argdefs . RPAR COLON type LCBRACE stms RCBRACE SEMI

    RPAR  shift, and go to state 30


State 19

   31 type: ID .

    $default  reduce using rule 31 (type)


State 20

   26 type: _T_INT .

    $default  reduce using rule 26 (type)


State 21

   27 type: _T_FLOAT .

    $default  reduce using rule 27 (type)


State 22

   28 type: _T_STRING .

    $default  reduce using rule 28 (type)


State 23

   29 type: _T_BOOL .

    $default  reduce using rule 29 (type)


State 24

   30 type: _T_VOID .

    $default  reduce using rule 30 (type)


State 25

    9 decl: DEFINE ID type . SEMI
   32 type: type . LSBRACE INTLIT RSBRACE

    SEMI     shift, and go to state 31
    LSBRACE  shift, and go to state 32


State 26

    5 decl: ids COLON type . SEMI
    6     | ids COLON type . ASSIGN exp SEMI
   32 type: type . LSBRACE INTLIT RSBRACE

    SEMI     shift, and go to state 33
    ASSIGN   shift, and go to state 34
    LSBRACE  shift, and go to state 32


State 27

   10 argdef: ID COLON . type
   26 type: . _T_INT
   27     | . _T_FLOAT
   28     | . _T_STRING
   29     | . _T_BOOL
   30     | . _T_VOID
   31     | . ID
   32     | . type LSBRACE INTLIT RSBRACE

    ID         shift, and go to state 19
    _T_INT     shift, and go to state 20
    _T_FLOAT   shift, and go to state 21
    _T_STRING  shift, and go to state 22
    _T_BOOL    shift, and go to state 23
    _T_VOID    shift, and go to state 24

    type  go to state 35


State 28

    7 decl: ID LPAR RPAR COLON . type LCBRACE stms RCBRACE SEMI
   26 type: . _T_INT
   27     | . _T_FLOAT
   28     | . _T_STRING
   29     | . _T_BOOL
   30     | . _T_VOID
   31     | . ID
   32     | . type LSBRACE INTLIT RSBRACE

    ID         shift, and go to state 19
    _T_INT     shift, and go to state 20
    _T_FLOAT   shift, and go to state 21
    _T_STRING  shift, and go to state 22
    _T_BOOL    shift, and go to state 23
    _T_VOID    shift, and go to state 24

    type  go to state 36


State 29

   10 argdef: . ID COLON type
   11 argdefs: . argdef
   12        | . argdef COMMA argdefs
   12        | argdef COMMA . argdefs

    ID  shift, and go to state 15

    argdef   go to state 17
    argdefs  go to state 37


State 30

    8 decl: ID LPAR argdefs RPAR . COLON type LCBRACE stms RCBRACE SEMI

    COLON  shift, and go to state 38


State 31

    9 decl: DEFINE ID type SEMI .

    $default  reduce using rule 9 (decl)


State 32

   32 type: type LSBRACE . INTLIT RSBRACE

    INTLIT  shift, and go to state 39


State 33

    5 decl: ids COLON type SEMI .

    $default  reduce using rule 5 (decl)


State 34

    6 decl: ids COLON type ASSIGN . exp SEMI
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 49


State 35

   10 argdef: ID COLON type .  [COMMA, RPAR]
   32 type: type . LSBRACE INTLIT RSBRACE

    LSBRACE  shift, and go to state 32

    $default  reduce using rule 10 (argdef)


State 36

    7 decl: ID LPAR RPAR COLON type . LCBRACE stms RCBRACE SEMI
   32 type: type . LSBRACE INTLIT RSBRACE

    LCBRACE  shift, and go to state 50
    LSBRACE  shift, and go to state 32


State 37

   12 argdefs: argdef COMMA argdefs .

    $default  reduce using rule 12 (argdefs)


State 38

    8 decl: ID LPAR argdefs RPAR COLON . type LCBRACE stms RCBRACE SEMI
   26 type: . _T_INT
   27     | . _T_FLOAT
   28     | . _T_STRING
   29     | . _T_BOOL
   30     | . _T_VOID
   31     | . ID
   32     | . type LSBRACE INTLIT RSBRACE

    ID         shift, and go to state 19
    _T_INT     shift, and go to state 20
    _T_FLOAT   shift, and go to state 21
    _T_STRING  shift, and go to state 22
    _T_BOOL    shift, and go to state 23
    _T_VOID    shift, and go to state 24

    type  go to state 51


State 39

   32 type: type LSBRACE INTLIT . RSBRACE

    RSBRACE  shift, and go to state 52


State 40

   33 lit: INTLIT .

    $default  reduce using rule 33 (lit)


State 41

   36 lit: BOOLLIT .

    $default  reduce using rule 36 (lit)


State 42

   34 lit: FLOATLIT .

    $default  reduce using rule 34 (lit)


State 43

   35 lit: STRLIT .

    $default  reduce using rule 35 (lit)


State 44

   38 exp: ID .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, EQ, NEQ, GT, GEQ, LT, LEQ, LSBRACE, RPAR]
   57    | ID . LPAR RPAR
   58    | ID . LPAR args RPAR

    LPAR  shift, and go to state 53

    $default  reduce using rule 38 (exp)


State 45

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   54    | NOT . exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 54


State 46

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   55    | SUB . exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 55


State 47

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   56    | LPAR . exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 56


State 48

   37 exp: lit .

    $default  reduce using rule 37 (exp)


State 49

    6 decl: ids COLON type ASSIGN exp . SEMI
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    SEMI     shift, and go to state 57
    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73


State 50

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    7     | ID LPAR RPAR COLON type LCBRACE . stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 80
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 51

    8 decl: ID LPAR argdefs RPAR COLON type . LCBRACE stms RCBRACE SEMI
   32 type: type . LSBRACE INTLIT RSBRACE

    LCBRACE  shift, and go to state 83
    LSBRACE  shift, and go to state 32


State 52

   32 type: type LSBRACE INTLIT RSBRACE .

    $default  reduce using rule 32 (type)


State 53

   13 args: . exp
   14     | . exp COMMA args
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   57    | ID LPAR . RPAR
   58    | . ID LPAR args RPAR
   58    | ID LPAR . args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47
    RPAR      shift, and go to state 84

    args  go to state 85
    lit   go to state 48
    exp   go to state 86


State 54

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   54    | NOT exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, RPAR]
   59    | exp . ASSIGN exp

    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 54 (exp)

    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 54 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 54 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 54 and token SUB resolved as shift (NOT < SUB).
    Conflict between rule 54 and token ADD resolved as shift (NOT < ADD).
    Conflict between rule 54 and token MUL resolved as shift (NOT < MUL).
    Conflict between rule 54 and token DIV resolved as shift (NOT < DIV).
    Conflict between rule 54 and token MOD resolved as shift (NOT < MOD).
    Conflict between rule 54 and token POW resolved as shift (NOT < POW).
    Conflict between rule 54 and token EQ resolved as shift (NOT < EQ).
    Conflict between rule 54 and token NEQ resolved as shift (NOT < NEQ).
    Conflict between rule 54 and token GT resolved as shift (NOT < GT).
    Conflict between rule 54 and token GEQ resolved as shift (NOT < GEQ).
    Conflict between rule 54 and token LT resolved as shift (NOT < LT).
    Conflict between rule 54 and token LEQ resolved as shift (NOT < LEQ).
    Conflict between rule 54 and token LSBRACE resolved as shift (NOT < LSBRACE).


State 55

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   55    | SUB exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 55 (exp)

    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < NEG).
    Conflict between rule 55 and token OR resolved as reduce (OR < NEG).
    Conflict between rule 55 and token AND resolved as reduce (AND < NEG).
    Conflict between rule 55 and token SUB resolved as reduce (SUB < NEG).
    Conflict between rule 55 and token ADD resolved as reduce (ADD < NEG).
    Conflict between rule 55 and token MUL resolved as reduce (MUL < NEG).
    Conflict between rule 55 and token DIV resolved as reduce (DIV < NEG).
    Conflict between rule 55 and token MOD resolved as reduce (MOD < NEG).
    Conflict between rule 55 and token POW resolved as reduce (POW < NEG).
    Conflict between rule 55 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 55 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 55 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 55 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 55 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 55 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 55 and token LSBRACE resolved as shift (NEG < LSBRACE).


State 56

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   56    | LPAR exp . RPAR
   59    | exp . ASSIGN exp

    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73
    RPAR     shift, and go to state 87


State 57

    6 decl: ids COLON type ASSIGN exp SEMI .

    $default  reduce using rule 6 (decl)


State 58

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp
   59    | exp ASSIGN . exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 88


State 59

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   53    | exp OR . exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 89


State 60

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   52    | exp AND . exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 90


State 61

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   41    | exp SUB . exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 91


State 62

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   40    | exp ADD . exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 92


State 63

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   42    | exp MUL . exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 93


State 64

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   43    | exp DIV . exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 94


State 65

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   45    | exp MOD . exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 95


State 66

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   44    | exp POW . exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 96


State 67

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   51    | exp EQ . exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 97


State 68

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   50    | exp NEQ . exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 98


State 69

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   46    | exp GT . exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 99


State 70

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   48    | exp GEQ . exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 100


State 71

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   47    | exp LT . exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 101


State 72

   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   49    | exp LEQ . exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 102


State 73

   39 exp: exp LSBRACE . INTLIT RSBRACE

    INTLIT  shift, and go to state 103


State 74

    7 decl: ID . LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID . LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
   15 ids: ID .  [COLON]
   16    | ID . COMMA ids
   38 exp: ID .  [SEMI, ASSIGN, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, EQ, NEQ, GT, GEQ, LT, LEQ, LSBRACE]
   57    | ID . LPAR RPAR
   58    | ID . LPAR args RPAR

    COMMA  shift, and go to state 7
    LPAR   shift, and go to state 104

    COLON     reduce using rule 15 (ids)
    $default  reduce using rule 38 (exp)


State 75

   21 stm: RETURN . exp SEMI
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 105


State 76

   24 stm: WHILE . exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 106


State 77

   25 stm: NEXT .

    $default  reduce using rule 25 (stm)


State 78

   22 stm: IF . exp THEN LCBRACE stms RCBRACE SEMI
   23    | IF . exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    lit  go to state 48
    exp  go to state 107


State 79

   19 stm: decl .

    $default  reduce using rule 19 (stm)


State 80

    7 decl: ID LPAR RPAR COLON type LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 108


State 81

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   17     | stm .  [RCBRACE]
   18     | . stm stms
   18     | stm . stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    $default  reduce using rule 17 (stms)

    decl  go to state 79
    ids   go to state 6
    stms  go to state 109
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 82

   20 stm: exp . SEMI
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    SEMI     shift, and go to state 110
    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73


State 83

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID LPAR argdefs RPAR COLON type LCBRACE . stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 111
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 84

   57 exp: ID LPAR RPAR .

    $default  reduce using rule 57 (exp)


State 85

   58 exp: ID LPAR args . RPAR

    RPAR  shift, and go to state 112


State 86

   13 args: exp .  [RPAR]
   14     | exp . COMMA args
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    ASSIGN   shift, and go to state 58
    COMMA    shift, and go to state 113
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 13 (args)


State 87

   56 exp: LPAR exp RPAR .

    $default  reduce using rule 56 (exp)


State 88

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp
   59    | exp ASSIGN exp .  [DO, THEN, SEMI, COMMA, RPAR]

    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 59 (exp)

    Conflict between rule 59 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 59 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 59 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 59 and token SUB resolved as shift (ASSIGN < SUB).
    Conflict between rule 59 and token ADD resolved as shift (ASSIGN < ADD).
    Conflict between rule 59 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 59 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 59 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 59 and token POW resolved as shift (ASSIGN < POW).
    Conflict between rule 59 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 59 and token NEQ resolved as shift (ASSIGN < NEQ).
    Conflict between rule 59 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 59 and token GEQ resolved as shift (ASSIGN < GEQ).
    Conflict between rule 59 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 59 and token LEQ resolved as shift (ASSIGN < LEQ).
    Conflict between rule 59 and token LSBRACE resolved as shift (ASSIGN < LSBRACE).


State 89

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   53    | exp OR exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, RPAR]
   59    | exp . ASSIGN exp

    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 53 (exp)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 53 and token OR resolved as reduce (%left OR).
    Conflict between rule 53 and token AND resolved as shift (OR < AND).
    Conflict between rule 53 and token SUB resolved as shift (OR < SUB).
    Conflict between rule 53 and token ADD resolved as shift (OR < ADD).
    Conflict between rule 53 and token MUL resolved as shift (OR < MUL).
    Conflict between rule 53 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 53 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 53 and token POW resolved as shift (OR < POW).
    Conflict between rule 53 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 53 and token NEQ resolved as shift (OR < NEQ).
    Conflict between rule 53 and token GT resolved as shift (OR < GT).
    Conflict between rule 53 and token GEQ resolved as shift (OR < GEQ).
    Conflict between rule 53 and token LT resolved as shift (OR < LT).
    Conflict between rule 53 and token LEQ resolved as shift (OR < LEQ).
    Conflict between rule 53 and token LSBRACE resolved as shift (OR < LSBRACE).


State 90

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   52    | exp AND exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, RPAR]
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 52 (exp)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 52 and token OR resolved as reduce (OR < AND).
    Conflict between rule 52 and token AND resolved as reduce (%left AND).
    Conflict between rule 52 and token SUB resolved as shift (AND < SUB).
    Conflict between rule 52 and token ADD resolved as shift (AND < ADD).
    Conflict between rule 52 and token MUL resolved as shift (AND < MUL).
    Conflict between rule 52 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 52 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 52 and token POW resolved as shift (AND < POW).
    Conflict between rule 52 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 52 and token NEQ resolved as shift (AND < NEQ).
    Conflict between rule 52 and token GT resolved as shift (AND < GT).
    Conflict between rule 52 and token GEQ resolved as shift (AND < GEQ).
    Conflict between rule 52 and token LT resolved as shift (AND < LT).
    Conflict between rule 52 and token LEQ resolved as shift (AND < LEQ).
    Conflict between rule 52 and token LSBRACE resolved as shift (AND < LSBRACE).


State 91

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   41    | exp SUB exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, RPAR]
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 41 (exp)

    Conflict between rule 41 and token ASSIGN resolved as reduce (ASSIGN < SUB).
    Conflict between rule 41 and token OR resolved as reduce (OR < SUB).
    Conflict between rule 41 and token AND resolved as reduce (AND < SUB).
    Conflict between rule 41 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 41 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 41 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 41 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 41 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 41 and token POW resolved as shift (SUB < POW).
    Conflict between rule 41 and token EQ resolved as shift (SUB < EQ).
    Conflict between rule 41 and token NEQ resolved as shift (SUB < NEQ).
    Conflict between rule 41 and token GT resolved as shift (SUB < GT).
    Conflict between rule 41 and token GEQ resolved as shift (SUB < GEQ).
    Conflict between rule 41 and token LT resolved as shift (SUB < LT).
    Conflict between rule 41 and token LEQ resolved as shift (SUB < LEQ).
    Conflict between rule 41 and token LSBRACE resolved as shift (SUB < LSBRACE).


State 92

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   40    | exp ADD exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, RPAR]
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 40 (exp)

    Conflict between rule 40 and token ASSIGN resolved as reduce (ASSIGN < ADD).
    Conflict between rule 40 and token OR resolved as reduce (OR < ADD).
    Conflict between rule 40 and token AND resolved as reduce (AND < ADD).
    Conflict between rule 40 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 40 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 40 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 40 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 40 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 40 and token POW resolved as shift (ADD < POW).
    Conflict between rule 40 and token EQ resolved as shift (ADD < EQ).
    Conflict between rule 40 and token NEQ resolved as shift (ADD < NEQ).
    Conflict between rule 40 and token GT resolved as shift (ADD < GT).
    Conflict between rule 40 and token GEQ resolved as shift (ADD < GEQ).
    Conflict between rule 40 and token LT resolved as shift (ADD < LT).
    Conflict between rule 40 and token LEQ resolved as shift (ADD < LEQ).
    Conflict between rule 40 and token LSBRACE resolved as shift (ADD < LSBRACE).


State 93

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   42    | exp MUL exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, RPAR]
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 42 (exp)

    Conflict between rule 42 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 42 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 42 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 42 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 42 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 42 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 42 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 42 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 42 and token POW resolved as shift (MUL < POW).
    Conflict between rule 42 and token EQ resolved as shift (MUL < EQ).
    Conflict between rule 42 and token NEQ resolved as shift (MUL < NEQ).
    Conflict between rule 42 and token GT resolved as shift (MUL < GT).
    Conflict between rule 42 and token GEQ resolved as shift (MUL < GEQ).
    Conflict between rule 42 and token LT resolved as shift (MUL < LT).
    Conflict between rule 42 and token LEQ resolved as shift (MUL < LEQ).
    Conflict between rule 42 and token LSBRACE resolved as shift (MUL < LSBRACE).


State 94

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   43    | exp DIV exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, RPAR]
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 43 (exp)

    Conflict between rule 43 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 43 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 43 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 43 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 43 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 43 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 43 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 43 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 43 and token POW resolved as shift (DIV < POW).
    Conflict between rule 43 and token EQ resolved as shift (DIV < EQ).
    Conflict between rule 43 and token NEQ resolved as shift (DIV < NEQ).
    Conflict between rule 43 and token GT resolved as shift (DIV < GT).
    Conflict between rule 43 and token GEQ resolved as shift (DIV < GEQ).
    Conflict between rule 43 and token LT resolved as shift (DIV < LT).
    Conflict between rule 43 and token LEQ resolved as shift (DIV < LEQ).
    Conflict between rule 43 and token LSBRACE resolved as shift (DIV < LSBRACE).


State 95

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   45    | exp MOD exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, RPAR]
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 45 (exp)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 45 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 45 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 45 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 45 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 45 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 45 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 45 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 45 and token POW resolved as shift (MOD < POW).
    Conflict between rule 45 and token EQ resolved as shift (MOD < EQ).
    Conflict between rule 45 and token NEQ resolved as shift (MOD < NEQ).
    Conflict between rule 45 and token GT resolved as shift (MOD < GT).
    Conflict between rule 45 and token GEQ resolved as shift (MOD < GEQ).
    Conflict between rule 45 and token LT resolved as shift (MOD < LT).
    Conflict between rule 45 and token LEQ resolved as shift (MOD < LEQ).
    Conflict between rule 45 and token LSBRACE resolved as shift (MOD < LSBRACE).


State 96

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   44    | exp POW exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, RPAR]
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73

    $default  reduce using rule 44 (exp)

    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < POW).
    Conflict between rule 44 and token OR resolved as reduce (OR < POW).
    Conflict between rule 44 and token AND resolved as reduce (AND < POW).
    Conflict between rule 44 and token SUB resolved as reduce (SUB < POW).
    Conflict between rule 44 and token ADD resolved as reduce (ADD < POW).
    Conflict between rule 44 and token MUL resolved as reduce (MUL < POW).
    Conflict between rule 44 and token DIV resolved as reduce (DIV < POW).
    Conflict between rule 44 and token MOD resolved as reduce (MOD < POW).
    Conflict between rule 44 and token POW resolved as shift (%right POW).
    Conflict between rule 44 and token EQ resolved as shift (POW < EQ).
    Conflict between rule 44 and token NEQ resolved as shift (POW < NEQ).
    Conflict between rule 44 and token GT resolved as shift (POW < GT).
    Conflict between rule 44 and token GEQ resolved as shift (POW < GEQ).
    Conflict between rule 44 and token LT resolved as shift (POW < LT).
    Conflict between rule 44 and token LEQ resolved as shift (POW < LEQ).
    Conflict between rule 44 and token LSBRACE resolved as shift (POW < LSBRACE).


State 97

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   51    | exp EQ exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 51 (exp)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 51 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 51 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 51 and token SUB resolved as reduce (SUB < EQ).
    Conflict between rule 51 and token ADD resolved as reduce (ADD < EQ).
    Conflict between rule 51 and token MUL resolved as reduce (MUL < EQ).
    Conflict between rule 51 and token DIV resolved as reduce (DIV < EQ).
    Conflict between rule 51 and token MOD resolved as reduce (MOD < EQ).
    Conflict between rule 51 and token POW resolved as reduce (POW < EQ).
    Conflict between rule 51 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 51 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 51 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 51 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 51 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 51 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 51 and token LSBRACE resolved as shift (EQ < LSBRACE).


State 98

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   50    | exp NEQ exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 50 (exp)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < NEQ).
    Conflict between rule 50 and token OR resolved as reduce (OR < NEQ).
    Conflict between rule 50 and token AND resolved as reduce (AND < NEQ).
    Conflict between rule 50 and token SUB resolved as reduce (SUB < NEQ).
    Conflict between rule 50 and token ADD resolved as reduce (ADD < NEQ).
    Conflict between rule 50 and token MUL resolved as reduce (MUL < NEQ).
    Conflict between rule 50 and token DIV resolved as reduce (DIV < NEQ).
    Conflict between rule 50 and token MOD resolved as reduce (MOD < NEQ).
    Conflict between rule 50 and token POW resolved as reduce (POW < NEQ).
    Conflict between rule 50 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 50 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 50 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 50 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 50 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 50 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 50 and token LSBRACE resolved as shift (NEQ < LSBRACE).


State 99

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   46    | exp GT exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 46 (exp)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 46 and token OR resolved as reduce (OR < GT).
    Conflict between rule 46 and token AND resolved as reduce (AND < GT).
    Conflict between rule 46 and token SUB resolved as reduce (SUB < GT).
    Conflict between rule 46 and token ADD resolved as reduce (ADD < GT).
    Conflict between rule 46 and token MUL resolved as reduce (MUL < GT).
    Conflict between rule 46 and token DIV resolved as reduce (DIV < GT).
    Conflict between rule 46 and token MOD resolved as reduce (MOD < GT).
    Conflict between rule 46 and token POW resolved as reduce (POW < GT).
    Conflict between rule 46 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 46 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 46 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 46 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 46 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 46 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 46 and token LSBRACE resolved as shift (GT < LSBRACE).


State 100

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   48    | exp GEQ exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 48 (exp)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < GEQ).
    Conflict between rule 48 and token OR resolved as reduce (OR < GEQ).
    Conflict between rule 48 and token AND resolved as reduce (AND < GEQ).
    Conflict between rule 48 and token SUB resolved as reduce (SUB < GEQ).
    Conflict between rule 48 and token ADD resolved as reduce (ADD < GEQ).
    Conflict between rule 48 and token MUL resolved as reduce (MUL < GEQ).
    Conflict between rule 48 and token DIV resolved as reduce (DIV < GEQ).
    Conflict between rule 48 and token MOD resolved as reduce (MOD < GEQ).
    Conflict between rule 48 and token POW resolved as reduce (POW < GEQ).
    Conflict between rule 48 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 48 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 48 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 48 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 48 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 48 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 48 and token LSBRACE resolved as shift (GEQ < LSBRACE).


State 101

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   47    | exp LT exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 47 (exp)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 47 and token OR resolved as reduce (OR < LT).
    Conflict between rule 47 and token AND resolved as reduce (AND < LT).
    Conflict between rule 47 and token SUB resolved as reduce (SUB < LT).
    Conflict between rule 47 and token ADD resolved as reduce (ADD < LT).
    Conflict between rule 47 and token MUL resolved as reduce (MUL < LT).
    Conflict between rule 47 and token DIV resolved as reduce (DIV < LT).
    Conflict between rule 47 and token MOD resolved as reduce (MOD < LT).
    Conflict between rule 47 and token POW resolved as reduce (POW < LT).
    Conflict between rule 47 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 47 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 47 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 47 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 47 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 47 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 47 and token LSBRACE resolved as shift (LT < LSBRACE).


State 102

   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   49    | exp LEQ exp .  [DO, THEN, SEMI, ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, RPAR]
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    LSBRACE  shift, and go to state 73

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LT   error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 49 (exp)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < LEQ).
    Conflict between rule 49 and token OR resolved as reduce (OR < LEQ).
    Conflict between rule 49 and token AND resolved as reduce (AND < LEQ).
    Conflict between rule 49 and token SUB resolved as reduce (SUB < LEQ).
    Conflict between rule 49 and token ADD resolved as reduce (ADD < LEQ).
    Conflict between rule 49 and token MUL resolved as reduce (MUL < LEQ).
    Conflict between rule 49 and token DIV resolved as reduce (DIV < LEQ).
    Conflict between rule 49 and token MOD resolved as reduce (MOD < LEQ).
    Conflict between rule 49 and token POW resolved as reduce (POW < LEQ).
    Conflict between rule 49 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 49 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 49 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 49 and token GEQ resolved as an error (%nonassoc GEQ).
    Conflict between rule 49 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 49 and token LEQ resolved as an error (%nonassoc LEQ).
    Conflict between rule 49 and token LSBRACE resolved as shift (LEQ < LSBRACE).


State 103

   39 exp: exp LSBRACE INTLIT . RSBRACE

    RSBRACE  shift, and go to state 114


State 104

    7 decl: ID LPAR . RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | ID LPAR . argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
   10 argdef: . ID COLON type
   11 argdefs: . argdef
   12        | . argdef COMMA argdefs
   13 args: . exp
   14     | . exp COMMA args
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   57    | ID LPAR . RPAR
   58    | . ID LPAR args RPAR
   58    | ID LPAR . args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 115
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47
    RPAR      shift, and go to state 116

    argdef   go to state 17
    argdefs  go to state 18
    args     go to state 85
    lit      go to state 48
    exp      go to state 86


State 105

   21 stm: RETURN exp . SEMI
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    SEMI     shift, and go to state 117
    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73


State 106

   24 stm: WHILE exp . DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    DO       shift, and go to state 118
    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73


State 107

   22 stm: IF exp . THEN LCBRACE stms RCBRACE SEMI
   23    | IF exp . THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   39 exp: exp . LSBRACE INTLIT RSBRACE
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . POW exp
   45    | exp . MOD exp
   46    | exp . GT exp
   47    | exp . LT exp
   48    | exp . GEQ exp
   49    | exp . LEQ exp
   50    | exp . NEQ exp
   51    | exp . EQ exp
   52    | exp . AND exp
   53    | exp . OR exp
   59    | exp . ASSIGN exp

    THEN     shift, and go to state 119
    ASSIGN   shift, and go to state 58
    OR       shift, and go to state 59
    AND      shift, and go to state 60
    SUB      shift, and go to state 61
    ADD      shift, and go to state 62
    MUL      shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    POW      shift, and go to state 66
    EQ       shift, and go to state 67
    NEQ      shift, and go to state 68
    GT       shift, and go to state 69
    GEQ      shift, and go to state 70
    LT       shift, and go to state 71
    LEQ      shift, and go to state 72
    LSBRACE  shift, and go to state 73


State 108

    7 decl: ID LPAR RPAR COLON type LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 120


State 109

   18 stms: stm stms .

    $default  reduce using rule 18 (stms)


State 110

   20 stm: exp SEMI .

    $default  reduce using rule 20 (stm)


State 111

    8 decl: ID LPAR argdefs RPAR COLON type LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 121


State 112

   58 exp: ID LPAR args RPAR .

    $default  reduce using rule 58 (exp)


State 113

   13 args: . exp
   14     | . exp COMMA args
   14     | exp COMMA . args
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 44
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    args  go to state 122
    lit   go to state 48
    exp   go to state 86


State 114

   39 exp: exp LSBRACE INTLIT RSBRACE .

    $default  reduce using rule 39 (exp)


State 115

   10 argdef: ID . COLON type
   38 exp: ID .  [ASSIGN, COMMA, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, EQ, NEQ, GT, GEQ, LT, LEQ, LSBRACE, RPAR]
   57    | ID . LPAR RPAR
   58    | ID . LPAR args RPAR

    COLON  shift, and go to state 27
    LPAR   shift, and go to state 53

    $default  reduce using rule 38 (exp)


State 116

    7 decl: ID LPAR RPAR . COLON type LCBRACE stms RCBRACE SEMI
   57 exp: ID LPAR RPAR .  [SEMI, ASSIGN, OR, AND, SUB, ADD, MUL, DIV, MOD, POW, EQ, NEQ, GT, GEQ, LT, LEQ, LSBRACE]

    COLON  shift, and go to state 28

    $default  reduce using rule 57 (exp)


State 117

   21 stm: RETURN exp SEMI .

    $default  reduce using rule 21 (stm)


State 118

   24 stm: WHILE exp DO . LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 123


State 119

   22 stm: IF exp THEN . LCBRACE stms RCBRACE SEMI
   23    | IF exp THEN . LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 124


State 120

    7 decl: ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 7 (decl)


State 121

    8 decl: ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 125


State 122

   14 args: exp COMMA args .

    $default  reduce using rule 14 (args)


State 123

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | WHILE exp DO LCBRACE . stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 126
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 124

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   22    | IF exp THEN LCBRACE . stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   23    | IF exp THEN LCBRACE . stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 127
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 125

    8 decl: ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 8 (decl)


State 126

   24 stm: WHILE exp DO LCBRACE stms . RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    RCBRACE  shift, and go to state 128


State 127

   22 stm: IF exp THEN LCBRACE stms . RCBRACE SEMI
   23    | IF exp THEN LCBRACE stms . RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    RCBRACE  shift, and go to state 129


State 128

   24 stm: WHILE exp DO LCBRACE stms RCBRACE . ELSE LCBRACE stms RCBRACE SEMI

    ELSE  shift, and go to state 130


State 129

   22 stm: IF exp THEN LCBRACE stms RCBRACE . SEMI
   23    | IF exp THEN LCBRACE stms RCBRACE . ELSE LCBRACE stms RCBRACE SEMI

    ELSE  shift, and go to state 131
    SEMI  shift, and go to state 132


State 130

   24 stm: WHILE exp DO LCBRACE stms RCBRACE ELSE . LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 133


State 131

   23 stm: IF exp THEN LCBRACE stms RCBRACE ELSE . LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 134


State 132

   22 stm: IF exp THEN LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 22 (stm)


State 133

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   24    | WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE . stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 135
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 134

    5 decl: . ids COLON type SEMI
    6     | . ids COLON type ASSIGN exp SEMI
    7     | . ID LPAR RPAR COLON type LCBRACE stms RCBRACE SEMI
    8     | . ID LPAR argdefs RPAR COLON type LCBRACE stms RCBRACE SEMI
    9     | . DEFINE ID type SEMI
   15 ids: . ID
   16    | . ID COMMA ids
   17 stms: . stm
   18     | . stm stms
   19 stm: . decl
   20    | . exp SEMI
   21    | . RETURN exp SEMI
   22    | . IF exp THEN LCBRACE stms RCBRACE SEMI
   23    | . IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   23    | IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE . stms RCBRACE SEMI
   24    | . WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   25    | . NEXT
   33 lit: . INTLIT
   34    | . FLOATLIT
   35    | . STRLIT
   36    | . BOOLLIT
   37 exp: . lit
   38    | . ID
   39    | . exp LSBRACE INTLIT RSBRACE
   40    | . exp ADD exp
   41    | . exp SUB exp
   42    | . exp MUL exp
   43    | . exp DIV exp
   44    | . exp POW exp
   45    | . exp MOD exp
   46    | . exp GT exp
   47    | . exp LT exp
   48    | . exp GEQ exp
   49    | . exp LEQ exp
   50    | . exp NEQ exp
   51    | . exp EQ exp
   52    | . exp AND exp
   53    | . exp OR exp
   54    | . NOT exp
   55    | . SUB exp
   56    | . LPAR exp RPAR
   57    | . ID LPAR RPAR
   58    | . ID LPAR args RPAR
   59    | . exp ASSIGN exp

    INTLIT    shift, and go to state 40
    BOOLLIT   shift, and go to state 41
    FLOATLIT  shift, and go to state 42
    STRLIT    shift, and go to state 43
    ID        shift, and go to state 74
    DEFINE    shift, and go to state 2
    RETURN    shift, and go to state 75
    WHILE     shift, and go to state 76
    NEXT      shift, and go to state 77
    IF        shift, and go to state 78
    NOT       shift, and go to state 45
    SUB       shift, and go to state 46
    LPAR      shift, and go to state 47

    decl  go to state 79
    ids   go to state 6
    stms  go to state 136
    stm   go to state 81
    lit   go to state 48
    exp   go to state 82


State 135

   24 stm: WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 137


State 136

   23 stm: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 138


State 137

   24 stm: WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 139


State 138

   23 stm: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 140


State 139

   24 stm: WHILE exp DO LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 24 (stm)


State 140

   23 stm: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 23 (stm)
